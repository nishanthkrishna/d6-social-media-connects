<?php
/*
*
* Implements hook_perm()
*/

function sm_fb_perm() {
    return array('administer sm_fb','administer sm_fb settings');
}

/**
 * Implementation of hook_menu().
 */

function sm_fb_menu() {
    $items=array();
    $items['admin/settings/fb'] = array(
    'title' => 'Facebook settings',
    'description' => 'Facebook app settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('sm_fb_settings_form'),
    'access arguments' => array('administer sm_fb settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'sm_fb_admin.inc'
    );
    $items['fb/connect'] = array(
    'title' => 'Views',
    'page callback' => 'sm_fb_connect',
    'access callback' => TRUE,
    'description' => 'Callback for facebook connect.',
    'file' => 'includes/fbauth.inc',
    'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Implementation of hook_theme().
 */
function sm_fb_theme() {
    return array(
    'sm_fb_connect_button' => array(
    'arguments' => array('login_url' => NULL,'display'=>NULL),
    'template' =>'sm-fb-connect-button',
    'path' =>drupal_get_path('module', 'sm_fb')."/themes",
    'theme path' =>path_to_theme()
    )

    );

}


function sm_fb_block($op = 'list', $delta = 0, $edit = array()) {

    switch ($op) {
        case 'list':
            return array(
            'sm_fb_connect' => array('info' => t('Facebook connect'), 'cache' => BLOCK_NO_CACHE),
            );

        case 'view':
            switch ($delta) {
                case 'sm_fb_connect':
                    $fb= _sm_fb_init();
                    $params=_sm_fb_params();
                    $login_url=$fb->getLoginUrl($params);
                    $content=theme('sm_fb_connect_button',$login_url,variable_get('sm_fb_facebook_display','page'));
                    return array('subject' => t('Facbook connect'), 'content' => $content);
                    break;
            }


    }


}

function _sm_fb_init() {
    $fb_lib_path = function_exists('libraries_get_path') ? libraries_get_path('facebook-php-sdk') : 'sites/all/libraries/facebook-php-sdk';
    $fb_platform = variable_get(FB_VAR_API_FILE, $fb_lib_path . '/src/facebook.php');
    try {
        if (!class_exists('Facebook') && !include($fb_platform)) {
            $message = t('Failed to find the Facebook client libraries at %filename');
            drupal_set_message($message, 'error');
            watchdog('fb', $message);
            return NULL;
        }
        $fb = new Facebook(array(
        'appId' => variable_get('sm_fb_facebook_app_id',''),
        'secret' => variable_get('sm_fb_facebook_app_secret',''),
        'cookie' => false,
        ));
        return $fb;

    }catch (Exception $e) {
       //handle error
    }

}

function  _sm_fb_params() {
    $base_url=url('<front>', array('absolute' => TRUE));
    $query_params="?display=".variable_get('sm_fb_facebook_display','page');

    return array(
    "scope"=>variable_get('sm_fb_facebook_app_permissions',''),
    'redirect_uri' =>url("fb/connect",array("absolute"=>true)).$query_params,
    'display' =>variable_get('sm_fb_facebook_display','page')

    );

}
function sm_fb_invoke($op, $data = NULL, $return = NULL, $hook = 'sm_fb') {
    foreach (module_implements($hook) as $name) {
        $function = $name . '_' . $hook;
        try {
            $function($op, $data, $return);
        }
        catch (Exception $e) {

        }
    }
   
    return $return;
}